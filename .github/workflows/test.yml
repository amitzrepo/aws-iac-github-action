name: Terraform-Apply
'on':
  push:
    branches:
      - main
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: ap-south-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Initialize
        id: init
        run: terraform init
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name =='push'
        run: terraform apply -auto-approve
      - name: Playbook to mount efs on ec2
        hosts: ec2
        remote_user: ubuntu
        become: 'yes'
        gather_facts: true
        tasks:
          - debug:
              msg: >-
                mount_path:{{ hostvars[inventory_hostname].mount_path }},
                efs_endpoint: {{ hostvars[inventory_hostname].efs_endpoint }}
      - name: Update apt cache
        apt:
          update_cache: 'yes'
      - name: Ensure mount directory exists.
        file:
          path: /home/ubuntu/efs
          state: directory
          mode: 493
          owner: ubuntu
          group: ubuntu
      - name: Ensure EFS volume is mounted.
        mount:
          name: /home/ubuntu/efs
          src: '{{ hostvars[inventory_hostname].efs_endpoint }}'
          fstype: nfs4
          opts: >-
            nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
          state: mounted
