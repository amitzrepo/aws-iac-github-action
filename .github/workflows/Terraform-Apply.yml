name: Terraform Apply and Ansible Provision

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Initialize
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

  ansible:
    name: Ansible Provision
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

  generate_inventory:
        name: Generate Ansible Inventory
        runs-on: ubuntu-latest
        needs: [terraform, ansible]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      
        steps:
        - name: Checkout
          uses: actions/checkout@v4
      
        - name: Generate Ansible inventory file
          run: |
                mkdir -p ansible  # Create ansible directory if not exists
                echo '[ec2]' > ansible/inventory.ini
                echo '${ec2_hosts}' >> ansible/inventory.ini
                echo '' >> ansible/inventory.ini
                echo '[ec2:vars]' >> ansible/inventory.ini
                echo 'ansible_connection=ssh' >> ansible/inventory.ini
                echo 'ansible_ssh_private_key_file=${ssh_private_key_file}' >> ansible/inventory.ini
                echo 'ansible-user=ubuntu' >> ansible/inventory.ini
                echo 'mount_path="/home/ubuntu/efs"' >> ansible/inventory.ini
                echo 'efs_endpoint=${efs_hostname}:/' >> ansible/inventory.ini
      
        - name: Commit changes
          run: |
                git config --global user.email "mr.amitkumarpatel@gmail.com"
                git config --global user.name "amitzrepo"
                git add ansible/inventory.ini
                git commit -m "Update Ansible inventory file"
                git push

        - name: Run Ansible Playbook
          run: ansible-playbook ansible/playbook.yml
      
      